#!/usr/bin/env bash
USAGE='
Usage: demultiplex_qindex_array_2 [ -h ] lane indices input_dir output_dir
DEPRECATED: Probably more effective to use bash arrays instead of weird case/esac \
system to split job by SGE_TASK_ID

Uses the script demultiplexQINDEX.pl to demultiplex a complete directory
Demultiplexes a directory of qindex files by given indices.

Indices should be given as a comma-seperated list.

Ex.

Input directory is Lane2INDEX, containing multiple qindex files of the form:

s_2_1_xxxx_qindex.txt.gz

Data is indexed with 1, 3, 8, and 9 adapters.

The output would consist of five directories:

Lane2_01 Lane2_03 Lane2_08 Lane2_09 Lane2_00

In each directory will be several qindex files (one per tile) of the form

Lane2_1

s_2_1_xxxx_01_qindex.txt.gz
etc.

containing only those indexed reads.

An additional directory, Lane2_00 is created with unmatched reads.

Michael Chambers, 2013
'
#PATH=${PATH}:.

while getopts "h" opt; do
	case $opt in
		h)
			echo "$USAGE" >&2
			exit
			;;
		\?)
			echo "Flag not recognized: " >&2
			echo "$USAGE" >&2
			exit 2
			;;
	esac
done

if [ $# -lt 4 ]; then
	echo "Need four arguments!"
	echo "$USAGE";
	exit 1;
fi

lane=$1
indices=$2
input_dir=$3
output_dir=$4

if [ ! -d $output_dir ]; then
	mkdir $output_dir
fi
# if [ ! -d $input_dir ]; then
# 	mkdir $input_dir
# fi

tile=0

if [ $SGE_TASK_ID -lt 17 ]; then
	tile=$(( 1100 + $SGE_TASK_ID ))
elif [ $SGE_TASK_ID -lt 33 ]; then
	tile=$(( 1200 + $SGE_TASK_ID - 16 ))
elif [ $SGE_TASK_ID -lt 49 ]; then
	tile=$(( 1300 + $SGE_TASK_ID - 32 ))
elif [ $SGE_TASK_ID -lt 65 ]; then
	tile=$(( 2100 + $SGE_TASK_ID - 48 ))
elif [ $SGE_TASK_ID -lt 81 ]; then
	tile=$(( 2200 + $SGE_TASK_ID - 64 ))
elif [ $SGE_TASK_ID -lt 97 ]; then
	tile=$(( 2300 + $SGE_TASK_ID - 80 ))
else
	exit 1
fi

file=${input_dir}/s_${lane}_1_${tile}_qindex.txt
if [ ! -e $file ]; then
	echo "@@@ Could not find file $file" `date` >&2
	exit 1
fi

if [[ $file =~ gz ]]; then
	zcat < $file > ${file%.gz}
	demultiplexQINDEX.pl -c $indices ${file%.gz}
	rm ${file%.gz}
else
	demultiplexQINDEX.pl -c -i $indices ${file%.gz}
fi

indarray=(${indices//,/ })
for i in ${indarray[@]} 0; do
	indexdir=${output_dir}/Lane${lane}_${i}

	if [ ! -d $indexdir ]; then
		mkdir $indexdir
	fi

	mv s_${lane}_1_${tile}_${i}_qindex.txt.gz $indexdir
done

